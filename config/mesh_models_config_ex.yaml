options:
    # Scene sampling mode 0 = center of each face
    # scene sampling mode 1 = num_rays surface points randomly uniformly across faces of specified model, or all of them (don't specify model)
    # scene sampling mode 2 = num_rays surface points, within sample_distance of a random vertex on specified model (or random model if unspecified)
    scene_sampling_mode: 1
    num_rays: 50 # if using random scene point sampling, sample this many points
    sample_distance: 0.05
    sample_model: 0

    model_set: [0] # which models to actually include for matching (all are used for point sampling, this can be used to create outliers)

    # options of rot constraints:
    # 0: constrained to ground truth
    # 1: unconstrained
    # 2: columnwise and row-wise L1-norm >= 1
    # 3: McCormick quaternion
    # 4: McCormick directly on rotmat
    # 5: Conservative RPY limits
    rotation_constraint: 0
    rotation_constraint_num_faces: 3

    allow_outliers: true
    phi_max: 0.01

    gurobi_int_options:
        #MIPFocus: 1
        PoolSearchMode: 2
        PoolSolutions: 20

    gurobi_float_options:
        TimeLimit: 3600
        PoolGap: 0.0
        #FeasRelaxBigM: 100
        MIPGap: 0.0
        #Heuristics: 0.05
 
models:
  - name: "AsymmetricPyramid"
    vertices:
      top: [0.0, 0.0, 0.1] # top
      fwd: [0.2, 0.0, 0.0] # forward
      bkl: [-0.1, 0.01, 0.0] # back-left
      bkr: [-0.1, -0.1, 0.0] # back-right
    faces: # clockwise from outside
      left: ["top", "bkl", "fwd"]
      rght: ["top", "fwd", "bkr"]
      rear: ["top", "bkr", "bkl"]
      bttm: ["fwd", "bkl", "bkr"]
    scene_tf: [0.5, 0, 0, 0, 0, 0.2]
    model_tf: [0.0, 0, 0., 0, 0.0, 0.0]

  - name: "TriangularPrism"
    vertices:
      px: [0.1, 0.0, 0.0] 
      nx: [-0.1, 0.0, 0.0] 
      py: [0.0, 0.1, 0.0] 
      ny: [0.0, -0.1, 0.0] 
      pz: [0.0, 0.0, 0.1]
      nz: [0.0, 0.0, -0.05] 
    faces: # clockwise from outside
      pxpynz: ["px", "nz", "py"]
      pxpypz: ["px", "py", "pz"]
      nxpynz: ["nx", "pz", "py"]
      nxpypz: ["nx", "py", "nz"]
      nxnynz: ["nx", "nz", "ny"]
      nxnypz: ["nx", "ny", "pz"]
      pxnynz: ["px", "ny", "nz"]
      pxnypz: ["nx", "pz", "ny"]
    scene_tf: [0.7, 0, 0.2, 0, 0.5, 0.5]
    model_tf: [0.0, 0, 0.3, 0, 0.0, 0.0]

 # - name: "AsymmetricPyramid_mirrored"
 #   vertices:
 #     top: [0.0, 0.0, 0.1] # top
 #     fwd: [0.2, 0.0, 0.0] # forward
 #     bkl: [-0.1, 0.1, 0.0] # back-left
 #     bkr: [-0.1, -0.01, 0.0] # back-right
 #   faces: # clockwise from outside
 #     left: ["top", "bkl", "fwd"]
 #     rght: ["top", "fwd", "bkr"]
 #     rear: ["top", "bkr", "bkl"]
 #     bttm: ["fwd", "bkl", "bkr"]
 #   scene_tf: [0.7, 0, 0.2, 0, 0.5, 0.5]
 #   model_tf: [0.0, 0, 0.2, 0, 0.0, 0.0]